<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.sang.mapper.EmpMapper">

    <insert id="addEmp" parameterType="org.sang.bean.Employee">
      insert into employee (name,phone,school,tiptopDegree,
      graduationTime, gender, workplace,job,
      workAge,wedlock, currentSalary,expectedSalary,
      recommendClient, channel,communicationContent,hr,
	  interviewTime,workTime,introduction,workExperience,
	  projectExperience,fileURL,hr_id,transferTime
      )
    values (
     #{name,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{school,jdbcType=VARCHAR}, #{tiptopDegree,jdbcType=VARCHAR},
     #{graduationTime,jdbcType=DATE}, #{gender,jdbcType=VARCHAR}, #{workplace,jdbcType=VARCHAR}, #{job,jdbcType=VARCHAR},
     #{workAge,jdbcType=INTEGER}, #{wedlock,jdbcType=VARCHAR}, #{currentSalary,jdbcType=DECIMAL}, #{expectedSalary,jdbcType=DECIMAL},
     #{recommendClient,jdbcType=VARCHAR}, #{channel,jdbcType=VARCHAR}, #{communicationContent,jdbcType=VARCHAR}, #{hr,jdbcType=VARCHAR},
     #{interviewTime,jdbcType=DATE}, #{workTime,jdbcType=DATE}, #{introduction,jdbcType=VARCHAR}, #{workExperience,jdbcType=VARCHAR},
     #{projectExperience,jdbcType=VARCHAR},#{fileURL,jdbcType=VARCHAR},#{hr_id,jdbcType=INTEGER}, #{transferTime,jdbcType=DATE}
      )
    </insert>

    <update id="updateEmp" parameterType="org.sang.bean.Employee">
        update employee
        <set>
            <if test="name != null and name != ''">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="phone != null and phone != ''">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="school != null and school != ''">
                school = #{school,jdbcType=VARCHAR},
            </if>
            <if test="tiptopDegree != null and tiptopDegree != ''">
                tiptopDegree =#{tiptopDegree,jdbcType=VARCHAR},
            </if>

            <if test="graduationTime != null">
                graduationTime= #{graduationTime,jdbcType=DATE},
            </if>
            <if test="gender != null and gender != ''">
                gender= #{gender,jdbcType=VARCHAR},
            </if>
            <if test="workplace != null and workplace != ''">
                workplace= #{workplace,jdbcType=VARCHAR},
            </if>
            <if test="job != null and job != ''">
                job= #{job,jdbcType=VARCHAR},
            </if>
            <if test="workAge != null">
                workAge= #{workAge,jdbcType=INTEGER},
            </if>
            <if test="wedlock != null and wedlock != ''">
                wedlock= #{wedlock,jdbcType=VARCHAR},
            </if>
            <if test="currentSalary != null and currentSalary != ''">
                currentSalary= #{currentSalary,jdbcType=DECIMAL},
            </if>
            <if test="expectedSalary != null and expectedSalary != ''">
                expectedSalary= #{expectedSalary,jdbcType=DECIMAL},
            </if>
            <if test="recommendClient != null and recommendClient != ''">
                recommendClient= #{recommendClient,jdbcType=VARCHAR},
            </if>
            <if test="channel != null and channel != ''">
                channel= #{channel,jdbcType=VARCHAR},
            </if>
            <if test="communicationContent != null and communicationContent != ''">
                communicationContent= #{communicationContent,jdbcType=VARCHAR},
            </if>
            <if test="hr != null and hr != ''">
                hr= #{hr,jdbcType=VARCHAR},
            </if>
            <if test="interviewTime != null">
                interviewTime= #{interviewTime,jdbcType=DATE},
            </if>
            <if test="workTime != null">
                workTime= #{workTime,jdbcType=DATE},
            </if>
            <if test="introduction != null and introduction != ''">
                introduction= #{introduction,jdbcType=VARCHAR},
            </if>
            <if test="workExperience != null and workExperience != ''">
                workExperience= #{workExperience,jdbcType=VARCHAR},
            </if>
            <if test="projectExperience != null and projectExperience != ''">
                projectExperience= #{projectExperience,jdbcType=VARCHAR},
            </if>
            <if test="transferTime != null">
                transferTime =#{transferTime,jdbcType=TIMESTAMP},
            </if>
            <if test="hr_id != null and hr_id != ''">
                hr_id =#{hr_id,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id}

    </update>

    <select id="getEmployeeByPage" resultType="org.sang.bean.Employee">
        select * from employee as e
        where 1=1
        <if test="hr_id!=null and hr_id!=''">
            and e.hr_id= #{hr_id,jdbcType=INTEGER}
        </if>
        <if test="name!=null and name!=''">
            and e.name LIKE concat('%',#{name},'%')
        </if>

        or  NOW() &gt;  date_ADD(transferTime,INTERVAL 15 DAY )
        <if test="start!=null and size!=''">
            ORDER BY e.id DESC limit #{start},#{size}
        </if>
    </select>

    <select id="getCountByNameHrId" resultType="Long">
        SELECT count(1) FROM employee e WHERE 1=1

        <if test="hr_id!=null and hr_id!=''">
            and e.hr_id= #{hr_id,jdbcType=INTEGER}
        </if>

        and DATE_ADD(e.transferTime,INTERVAL 5 SECOND)
        <if test="name!=null and name!=''">
            and e.name LIKE concat('%',#{name},'%')
        </if>
    </select>

    <select id="getCountByName" resultType="Long">
        SELECT count(1) FROM employee e WHERE 1=1

            and DATE_ADD(e.transferTime,INTERVAL 5 SECOND)
        <if test="name!=null and name!=''">
            and e.name LIKE concat('%',#{name},'%')
        </if>
            or NOW() &gt; date_ADD(transferTime,INTERVAL 15 DAY)
    </select>

    <select id="getById" resultType="org.sang.bean.Employee">
        SELECT * FROM employee WHERE id = #{id}
    </select>

    <select id="getByIds"  resultType="org.sang.bean.Employee">
        SELECT * FROM employee WHERE id in
        <foreach collection="ids" separator="," open="(" close=")" item="id">
            #{id}
        </foreach>
    </select>

    <delete id="deleteEmpById">
        DELETE FROM employee WHERE id IN
        <foreach collection="ids" separator="," open="(" close=")" item="id">
            #{id}
        </foreach>
    </delete>

    <select id="getEmpByNameAndPhone" resultType="org.sang.bean.Employee">
        select * from employee WHERE name= #{name} and phone= #{phone};
    </select>

    <select id="getEmpByPhone" resultType="org.sang.bean.Employee">
        select * from employee WHERE phone= #{phone};
    </select>

    <update id="updateEmpShowInterviewById" parameterType="int">
        update employee SET showInterview = '0' where id = #{id}
    </update>

    <select id="getEmployeeByPageAndHrId" resultType="org.sang.bean.Employee">
        select * from employee as e
        where showInterview = '1'
        <if test="hr_id != null and hr_id!=''">
            and hr_id = #{hr_id}
        </if>
        <if test="name!=null and name!=''">
            and e.name LIKE concat('%',#{name},'%')
        </if>
        <if test="start!=null and size!=''">
            order by e.id limit #{start},#{size}
        </if>
    </select>

    <select id="getEmpCountByHrPhoneName" resultType="org.sang.bean.Employee">
        SELECT count(*) FROM employee
        <where>
            <if test="phone != null">
                and phone = #{phone}
            </if>
            <if test="name != null">
                and name like concat ('%',#{name},'%')
            </if>
        </where>
    </select>

</mapper>